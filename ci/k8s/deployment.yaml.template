apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: lumen-${COLOR}
spec:
  replicas: 1
  selector:
    matchLabels:
      run: lumen-blue-green
      app: lumen
      color: ${COLOR}
  template:
    metadata:
      labels:
        run: lumen-blue-green
        lumen-version: ${BUILD_HASH}
        app: lumen
        color: ${COLOR}
        environment: ${ENVIRONMENT}
      annotations:
        prometheus.io/scrape: 'true'
    spec:
      containers:
      - name: lumen-client
        image: eu.gcr.io/akvo-lumen/lumen-client:${BUILD_HASH}
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: ${CLIENT_POD_CPU_REQUESTS}
            memory: ${CLIENT_POD_MEM_REQUESTS}
          limits:
            cpu: ${CLIENT_POD_CPU_LIMITS}
            memory: ${CLIENT_POD_MEM_LIMITS}
      - name: lumen-maps
        image: eu.gcr.io/akvo-lumen/lumen-maps:${BUILD_HASH}
        ports:
        - containerPort: 4000
        resources:
          requests:
            cpu: ${MAPS_POD_CPU_REQUESTS}
            memory: ${MAPS_POD_MEM_REQUESTS}
          limits:
            cpu: ${MAPS_POD_CPU_LIMITS}
            memory: ${MAPS_POD_MEM_LIMITS}
        env:
        - name: LUMEN_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: lumen
              key: encryption_key
      - name: lumen-exporter
        image: eu.gcr.io/akvo-lumen/lumen-exporter:${BUILD_HASH}
        ports:
        - containerPort: 3001
        livenessProbe:
          httpGet:
             path: /
             port: 3001
          initialDelaySeconds: 5
        readinessProbe:
          httpGet:
             path: /
             port: 3001
          initialDelaySeconds: 5
        resources:
          requests:
            cpu: ${EXPORTER_POD_CPU_REQUESTS}
            memory: ${EXPORTER_POD_MEM_REQUESTS}
          limits:
            cpu: ${EXPORTER_POD_CPU_LIMITS}
            memory: ${EXPORTER_POD_MEM_LIMITS}
        env:
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: lumen
              key: sentry.exporter_dsn
      - name: lumen-backend
        image: eu.gcr.io/akvo-lumen/lumen-backend:${BUILD_HASH}
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: ${BACKEND_POD_CPU_REQUESTS}
            memory: ${BACKEND_POD_MEM_REQUESTS}
          limits:
            cpu: ${BACKEND_POD_CPU_LIMITS}
            memory: ${BACKEND_POD_MEM_LIMITS}
        env:
        - name: LUMEN_CONFORM_SPECS
          valueFrom:
            secretKeyRef:
              name: lumen
              key: lumen_conform_specs
        - name: LUMEN_DB_URL
          valueFrom:
            secretKeyRef:
              name: lumen
              key: lumen_db_url
        - name: LUMEN_EMAIL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: lumen
              key: email.password
        - name: LUMEN_EMAIL_USER
          valueFrom:
            secretKeyRef:
              name: lumen
              key: email.user
        - name: LUMEN_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: lumen
              key: encryption_key
        - name: LUMEN_KEYCLOAK_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: lumen
              key: keycloak.client_secret
        - name: LUMEN_KEYCLOAK_URL
          valueFrom:
            configMapKeyRef:
              name: akvo
              key: keycloak.url
        - name: LUMEN_AUTH_URL
          valueFrom:
            configMapKeyRef:
              name: akvo
              key: auth.url
        - name: LUMEN_AUTH_PUBLIC_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: akvo
              key: auth.public.client.id
        - name: LUMEN_AUTH_END_SESSION_ENDPOINT_SUFFIX
          valueFrom:
            configMapKeyRef:
              name: akvo
              key: auth.end.session.endpoint.suffix
        - name: LUMEN_AUTH_RSA_SUFFIX_URL
          valueFrom:
            configMapKeyRef:
              name: akvo
              key: auth.rsa.suffix.url
        - name: LUMEN_FILE_UPLOAD_PATH
          value: /tmp/akvo/lumen
        - name: LUMEN_FLOW_API_URL
          valueFrom:
            configMapKeyRef:
              name: akvo
              key: flow.api.root
        - name: LUMEN_SENTRY_BACKEND_DSN
          valueFrom:
            secretKeyRef:
              name: lumen
              key: sentry.backend_dsn
        - name: LUMEN_SENTRY_CLIENT_DSN
          valueFrom:
            secretKeyRef:
              name: lumen
              key: sentry.client_dsn
        - name: LUMEN_PIWIK_SITE_ID
          valueFrom:
            secretKeyRef:
              name: lumen
              key: piwik.site_id
        - name: LUMEN_FLOW_REPORT_DATABASE_URL
          value: foo
        - name: POD_NAME
          valueFrom:
             fieldRef:
               fieldPath: metadata.name
        - name: LUMEN_DEPLOYMENT_COLOR
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['color']
        - name: LUMEN_DEPLOYMENT_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: akvo
              key: environment
        - name: LUMEN_DEPLOYMENT_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['lumen-version']                            
      - name: flow-maps-statsd-to-prometheus
      # If you change this version, probably you want to change the /windsahft/Dockerfile version
        image: akvo/akvo-maps-statsd-to-prometheus:f156d42c
        ports:
        - containerPort: 9125
        - containerPort: 9102
        livenessProbe:
          tcpSocket:
             port: 9125
          initialDelaySeconds: 5
        readinessProbe:
          tcpSocket:
             port: 9125
          initialDelaySeconds: 5
        resources:
          requests:
            cpu: "10m"
          limits:
            cpu: "1000m"
